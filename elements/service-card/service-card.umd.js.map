{"version":3,"file":"service-card.umd.js","sources":["service-card.umd.js"],"sourcesContent":["/**\n * Copyright 2020 Waxam\n * @license Apache-2.0, see License.md for full text.\n */\nimport { LitElement, html, css } from 'lit-element/lit-element.js';\n\n/**\n * `service-card`\n * `present services in a simple to read card`\n *\n * @microcopy - language worth noting:\n *  -\n *\n * @demo demo/index.html\n * @customElement service-card\n */\nclass ServiceCard extends LitElement {\n  \n  //styles function\n  static get styles() {\n    return  [\n      css`\n:host {\n  display: block;\n}\n\n:host([hidden]) {\n  display: none;\n}\n      `\n    ];\n  }\n\n  // render function\n  render() {\n    return html`\n\n<slot></slot>`;\n  }\n\n  // properties available to the custom element for data binding\n  static get properties() {\n    return {...super.properties};\n  }\n\n  /**\n   * Convention we use\n   */\n  static get tag() {\n    return \"service-card\";\n  }\n\n  /**\n   * HTMLElement\n   */\n  constructor() {\n    super();\n    \n  }\n  /**\n   * LitElement ready\n   */\n  firstUpdated(changedProperties) {\n    \n  }\n  /**\n   * LitElement life cycle - property changed\n   */\n  updated(changedProperties) {\n    changedProperties.forEach((oldValue, propName) => {\n      /* notify example\n      // notify\n      if (propName == 'format') {\n        this.dispatchEvent(\n          new CustomEvent(`${propName}-changed`, {\n            detail: {\n              value: this[propName],\n            }\n          })\n        );\n      }\n      */\n      /* observer example\n      if (propName == 'activeNode') {\n        this._activeNodeChanged(this[propName], oldValue);\n      }\n      */\n      /* computed example\n      if (['id', 'selected'].includes(propName)) {\n        this.__selectedChanged(this.selected, this.id);\n      }\n      */\n    });\n  }\n  \n}\ncustomElements.define(ServiceCard.tag, ServiceCard);\nexport { ServiceCard };\n"],"names":["ServiceCard","html","css","changedProperties","forEach","oldValue","propName","LitElement","customElements","define","tag"],"mappings":"u2DAgBMA,ybAmBKC,mDAfC,CACNC,sdA4BK,2DAaIC,oCAMLA,GACNA,EAAkBC,SAAQ,SAACC,EAAUC,cArDfC,cAgF1BC,eAAeC,OAAOT,EAAYU,IAAKV"}